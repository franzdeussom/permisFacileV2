{"version":3,"file":"src_app_pages_home_home_module_ts.js","mappings":"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","sources":["./src/app/pages/home/home.module.ts","./src/app/pages/home/home.page.ts"],"sourcesContent":["import { LoginPage } from './../login/login.page';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { UserRouteAccessService } from 'src/app/services/auth/user-route-access.service';\nimport { HomePage } from './home.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomePage,\n    data: {\n      authorities: ['ROLE_USER'],\n    },\n    canActivate: [UserRouteAccessService],\n  },\n  {\n    path: 'login', component: LoginPage\n  },\n  {\n    path: 'question-details',\n    loadChildren: () => import('../entities/question-details/question-details.module').then( m => m.QuestionDetailsPageModule)\n  },\n];\n\n@NgModule({\n  imports: [IonicModule, CommonModule, FormsModule, TranslateModule, RouterModule.forChild(routes)],\n  declarations: [HomePage],\n})\nexport class HomePageModule {}\n","import { CheckAccountTypeService } from './check-account-type.service';\nimport { EtatRep } from './../entities/question-details/EtatRep.enum';\nimport { Component, OnInit } from '@angular/core';\nimport { NavController, ToastController } from '@ionic/angular';\nimport { Account } from 'src/model/account.model';\nimport { AccountService } from '../../services/auth/account.service';\nimport { LoginService } from '../../services/login/login.service';\nimport { Question } from '../entities/question/question.model';\nimport { GlobalService } from '../entities/question/globalService';\nimport { LocalSaveService } from './..//entities/local-save.service';\nimport { DetailsParamService } from '../entities/details-id.service';\nimport { QuestionService } from '../entities/question';\nimport { HttpResponse } from '@angular/common/http';\nimport { Storage } from '@capacitor/storage';\nimport { filter, map } from 'rxjs/operators';\nimport { Network } from '@capacitor/network';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n})\nexport class HomePage implements OnInit {\n\n  account: Account;\n  questions: Question[];\n  etatRep: EtatRep;\n  constructor(public navController: NavController, private accountService: AccountService, private loginService: LoginService,\n                    private param: DetailsParamService,\n                    private globalService: GlobalService,\n                    private localSave: LocalSaveService,\n                    private questionService: QuestionService,\n                    private toastCtrl: ToastController,\n                    private typeAccount : CheckAccountTypeService\n\n                    ) { this.questions = [] }\n\n  ngOnInit() {\n    this.accountService.identity().then((account) => {\n      if (account === null) {\n        this.goBackToHomePage();\n      } else {\n        this.account = account;\n      }\n    });\n      //loading questions from globalService\n      this.init();\n\n      this.typeAccount.isAdmin();\n  }\n\n  isAuthenticated() {\n    return this.accountService.isAuthenticated();\n  }\n\n  async init() {\n    const status = await Network.getStatus();\n    console.log('Network status:', status);\n    const { value } = await Storage.get({ key: 'questions' });\n    if(!status.connected) {\n        if(!value || value.length === 0 || value === \"[]\") {\n            // no question and no connection\n            const toast = await this.toastCtrl.create({message: 'Besoin d internet pour le chargement!', duration: 2000, position: 'middle'});\n            await toast.present();\n        }else {\n            this.questions = JSON.parse(value);\n            this.globalService.globalQuestion = this.questions;\n        }\n    }\n    if(status.connected){\n        if(!value || value.length === 0 || value === \"[]\") {\n            this.questionService.query().pipe(\n                filter((res: HttpResponse<Question[]>) => res.ok),\n                map((res: HttpResponse<Question[]>) => res.body)\n            )\n            .subscribe(\n                (response: Question[]) => {\n                    this.questions = response;\n                    this.globalService.globalQuestion = this.questions;\n                    Storage.set({\n                        key: 'questions',\n                        value: JSON.stringify(this.questions)\n                    });                     \n                });       \n        }else{\n            this.questions = JSON.parse(value);\n\n            this.questionService.queryFromIndex(this.questions.length).pipe(\n                filter((res: HttpResponse<Question[]>) => res.ok),\n                map((res: HttpResponse<Question[]>) => res.body)\n            )\n            .subscribe(\n                (response: Question[]) => {\n                    this.questions.concat(response);\n                    //set singleton and save\n                    this.globalService.globalQuestion = this.questions;\n                    Storage.set({\n                        key: 'questions',\n                        value: JSON.stringify(this.questions)\n                    });\n                },\n            );   \n        }\n    }\n    \n\n}\n\n  logout() {\n    this.loginService.logout();\n    this.typeAccount.isAdministrator = false;\n    this.goBackToHomePage();\n  }\n\n  async favourite(idQuestion : number){\n    if(this.questions[idQuestion].favourite){\n      this.questions[idQuestion].favourite = false;\n    }else{\n      this.questions[idQuestion].favourite = true;\n    }\n\n  await this.localSave.localSave(this.questions);\n}\n\n  goDetail(id: number, quizz: Array<Question>){\n    this.param.setIdQuestion(id, quizz, false);\n    this.navController.navigateForward('/question-details');\n   }\n\n  private goBackToHomePage(): void {\n    this.navController.navigateRoot('login');\n  }\n  countNbrPlay(){\n    let count = 0;\n    console.log('nbr of questions done :', count);\n    alert(count);\n  }\n  \n  \n}\n"],"names":[],"sourceRoot":"webpack:///"}