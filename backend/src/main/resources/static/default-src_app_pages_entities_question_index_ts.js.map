{"version":3,"file":"default-src_app_pages_entities_question_index_ts.js","mappings":"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","sources":["./src/app/pages/entities/question/index.ts","./src/app/pages/entities/question/question-detail.ts","./src/app/pages/entities/question/question.model.ts","./src/app/pages/entities/question/question.service.ts","./src/app/pages/entities/question/question.ts","./src/app/shared/index.ts","./src/app/shared/util/request-util.ts","./node_modules/@capacitor/network/dist/esm/definitions.js","./node_modules/@capacitor/network/dist/esm/index.js"],"sourcesContent":["export * from './question.model';\nexport * from './question.service';\nexport * from './question-detail';\nexport * from './question';\n","import { Component, OnInit } from '@angular/core';\nimport { Question } from './question.model';\nimport { QuestionService } from './question.service';\nimport { NavController, AlertController } from '@ionic/angular';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n    selector: 'page-question-detail',\n    templateUrl: 'question-detail.html'\n})\nexport class QuestionDetailPage implements OnInit {\n    question: Question = {};\n\n    constructor(\n        private navController: NavController,\n        private questionService: QuestionService,\n        private activatedRoute: ActivatedRoute,\n        private alertController: AlertController\n    ) { }\n\n    ngOnInit(): void {\n        this.activatedRoute.data.subscribe((response) => {\n            this.question = response.data;\n        });\n    }\n\n    open(item: Question) {\n        this.navController.navigateForward('/tabs/entities/question/' + item.id + '/edit');\n    }\n\n    async deleteModal(item: Question) {\n        const alert = await this.alertController.create({\n            header: 'Confirm the deletion?',\n            buttons: [\n                {\n                    text: 'Cancel',\n                    role: 'cancel',\n                    cssClass: 'secondary'\n                }, {\n                    text: 'Delete',\n                    handler: () => {\n                        this.questionService.delete(item.id).subscribe(() => {\n                            this.navController.navigateForward('/tabs/entities/question');\n                        });\n                    }\n                }\n            ]\n        });\n        await alert.present();\n    }\n\n\n}\n","import { BaseEntity } from 'src/model/base-entity';\nimport { Reponse } from '../reponse/reponse.model';\n\nexport class Question implements BaseEntity {\n    constructor(\n        public id?: number,\n        public intitule?: string,\n        public image?: string,\n        public dateCreation?: any,\n        public lastUpdate?: any,\n        public favourite?: boolean,\n        public rep1?: string,\n        public rep2?: string,\n        public rep3?: string,\n        public reponses?: Reponse[],\n    ) {\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { ApiService } from '../../../services/api/api.service';\nimport { createRequestOption } from '../../../shared';\nimport { Question } from './question.model';\n\n@Injectable({ providedIn: 'root'})\nexport class QuestionService {\n    private resourceUrl = ApiService.API_URL + '/questions';\n\n    constructor(protected http: HttpClient) { }\n\n    create(question: Question): Observable<HttpResponse<Question>> {\n        return this.http.post<Question>(this.resourceUrl, question, { observe: 'response'});\n    }\n\n    update(question: Question): Observable<HttpResponse<Question>> {\n        return this.http.put(`${this.resourceUrl}/${question.id}`, question, { observe: 'response'});\n    }\n\n    find(id: number): Observable<HttpResponse<Question>> {\n        return this.http.get(`${this.resourceUrl}/${id}`, { observe: 'response'});\n    }\n\n    queryFromIndex(lastIndex: number, req?: any): Observable<HttpResponse<Question[]>> {\n        const options = createRequestOption(req);\n        return this.http.get<Question[]>(this.resourceUrl+\"/from/\"+lastIndex, { params: options, observe: 'response' });\n    }\n\n    query(req?: any): Observable<HttpResponse<Question[]>> {\n        const options = createRequestOption(req);\n        return this.http.get<Question[]>(this.resourceUrl, { params: options, observe: 'response' });\n    }\n\n    delete(id: number): Observable<HttpResponse<any>> {\n        return this.http.delete<any>(`${this.resourceUrl}/${id}`, { observe: 'response'});\n    }\n}\n","import { Component } from '@angular/core';\nimport { NavController, ToastController, Platform, IonItemSliding } from '@ionic/angular';\nimport { filter, map } from 'rxjs/operators';\nimport { HttpResponse } from '@angular/common/http';\nimport { Question } from './question.model';\nimport { QuestionService } from './question.service';\nimport { Network } from '@capacitor/network';\nimport { Storage } from '@capacitor/storage';\nimport { GlobalService } from './globalService';\n\n@Component({\n    selector: 'page-question',\n    templateUrl: 'question.html'\n})\nexport class QuestionPage {\n    questions: Question[];\n\n    // todo: add pagination\n\n    constructor(\n        private navController: NavController,\n        private questionService: QuestionService,\n        private toastCtrl: ToastController,\n        private globalService: GlobalService,\n        public plt: Platform,\n    \n    ) {\n        this.questions = [];\n    }\n\n    async ionViewWillEnter() {\n        //await this.loadAll();\n        await this.init()\n    }\n\n    async init() {\n        const status = await Network.getStatus();\n        console.log('Network status:', status);\n        const { value } = await Storage.get({ key: 'questions' });\n        if(!status.connected) {\n            if(!value || value.length === 0 || value === \"[]\") {\n                // no question and no connection\n                const toast = await this.toastCtrl.create({message: 'Besoin d internet pour le chargement!', duration: 2000, position: 'middle'});\n                await toast.present();\n            }else {\n                this.questions = JSON.parse(value);\n                this.globalService.globalQuestion = this.questions;\n            }\n        }\n        if(status.connected){\n            if(!value || value.length === 0 || value === \"[]\") {\n                this.questionService.query().pipe(\n                    filter((res: HttpResponse<Question[]>) => res.ok),\n                    map((res: HttpResponse<Question[]>) => res.body)\n                )\n                .subscribe(\n                    (response: Question[]) => {\n                        this.questions = response;\n                        this.globalService.globalQuestion = this.questions;\n                        Storage.set({\n                            key: 'questions',\n                            value: JSON.stringify(this.questions)\n                        });                     \n                    });       \n            }else{\n                this.questions = JSON.parse(value);\n\n                this.questionService.queryFromIndex(this.questions.length).pipe(\n                    filter((res: HttpResponse<Question[]>) => res.ok),\n                    map((res: HttpResponse<Question[]>) => res.body)\n                )\n                .subscribe(\n                    (response: Question[]) => {\n                        this.questions.concat(response);\n                        //set singleton and save\n                        this.globalService.globalQuestion = this.questions;\n                        Storage.set({\n                            key: 'questions',\n                            value: JSON.stringify(this.questions)\n                        });\n                    },\n                );   \n            }\n        }\n        \n\n    }\n\n    async loadAll(refresher?) {\n        this.questionService.query().pipe(\n            filter((res: HttpResponse<Question[]>) => res.ok),\n            map((res: HttpResponse<Question[]>) => res.body)\n        )\n        .subscribe(\n            (response: Question[]) => {\n                this.questions = response;\n                if (typeof(refresher) !== 'undefined') {\n                    setTimeout(() => {\n                        refresher.target.complete();\n                    }, 750);\n                }\n            },\n            async (error) => {\n                console.error(error);\n                const toast = await this.toastCtrl.create({message: 'Failed to load data', duration: 2000, position: 'middle'});\n                await toast.present();\n            });\n    }\n\n\n\n\n\n    \n\n    trackId(index: number, item: Question) {\n        return item.id;\n    }\n\n    async new() {\n        await this.navController.navigateForward('/tabs/entities/question/new');\n    }\n\n    async edit(item: IonItemSliding, question: Question) {\n        await this.navController.navigateForward('/tabs/entities/question/' + question.id + '/edit');\n        await item.close();\n    }\n\n    async delete(question) {\n        this.questionService.delete(question.id).subscribe(async () => {\n            const toast = await this.toastCtrl.create(\n                {message: 'Question deleted successfully.', duration: 3000, position: 'middle'});\n            await toast.present();\n            await this.loadAll();\n        }, (error) => console.error(error));\n    }\n\n    async view(question: Question) {\n        await this.navController.navigateForward('/tabs/entities/question/' + question.id + '/view');\n    }\n}\n","export * from './util/request-util';\n","import { HttpParams } from '@angular/common/http';\n\nexport const createRequestOption = (req?: any): HttpParams => {\n  let options: HttpParams = new HttpParams();\n  if (req) {\n    Object.keys(req).forEach((key) => {\n      if (key !== 'sort') {\n        options = options.set(key, req[key]);\n      }\n    });\n    if (req.sort) {\n      req.sort.forEach((val) => {\n        options = options.append('sort', val);\n      });\n    }\n  }\n  return options;\n};\n","export {};\n","import { registerPlugin } from '@capacitor/core';\nconst Network = registerPlugin('Network', {\n    web: () => import('./web').then(m => new m.NetworkWeb()),\n});\nexport * from './definitions';\nexport { Network };\n"],"names":[],"sourceRoot":"webpack:///"}