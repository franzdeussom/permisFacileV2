{"version":3,"file":"src_app_pages_entities_question_question_module_ts.js","mappings":"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","sources":["./src/app/pages/entities/question/question-update.ts","./src/app/pages/entities/question/question.module.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { NavController, Platform, ToastController } from '@ionic/angular';\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Question } from './question.model';\nimport { QuestionService } from './question.service';\n\n@Component({\n    selector: 'page-question-update',\n    templateUrl: 'question-update.html'\n})\nexport class QuestionUpdatePage implements OnInit {\n\n    question: Question;\n    dateCreationDp: any;\n    lastUpdateDp: any;\n    isSaving = false;\n    isNew = true;\n    isReadyToSave: boolean;\n\n    form = this.formBuilder.group({\n        id: [null, []],\n        intitule: [null, [Validators.required]],\n        image: [null, []],\n        dateCreation: [null, []],\n        lastUpdate: [null, []],\n    });\n\n    constructor(\n        protected activatedRoute: ActivatedRoute,\n        protected navController: NavController,\n        protected formBuilder: FormBuilder,\n        public platform: Platform,\n        protected toastCtrl: ToastController,\n        private questionService: QuestionService\n    ) {\n\n        // Watch the form for changes, and\n        this.form.valueChanges.subscribe((v) => {\n            this.isReadyToSave = this.form.valid;\n        });\n\n    }\n\n    ngOnInit() {\n        this.activatedRoute.data.subscribe((response) => {\n            this.question = response.data;\n            this.isNew = this.question.id === null || this.question.id === undefined;\n            this.updateForm(this.question);\n        });\n    }\n\n    updateForm(question: Question) {\n        this.form.patchValue({\n            id: question.id,\n            intitule: question.intitule,\n            image: question.image,\n            dateCreation: this.isNew ? new Date().toISOString().split('T')[0] : question.dateCreation,\n            lastUpdate: this.isNew ? new Date().toISOString().split('T')[0] : question.lastUpdate,\n        });\n    }\n\n    save() {\n        this.isSaving = true;\n        const question = this.createFromForm();\n        question.dateCreation = new Date(question.dateCreation).toISOString().split('T')[0];\n        question.lastUpdate = new Date(question.lastUpdate).toISOString().split('T')[0];\n        if (!this.isNew) {\n            this.subscribeToSaveResponse(this.questionService.update(question));\n        } else {\n            this.subscribeToSaveResponse(this.questionService.create(question));\n        }\n    }\n\n    protected subscribeToSaveResponse(result: Observable<HttpResponse<Question>>) {\n        result.subscribe((res: HttpResponse<Question>) => this.onSaveSuccess(res), (res: HttpErrorResponse) => this.onError(res.error));\n    }\n\n    async onSaveSuccess(response) {\n        let action = 'updated';\n        if (response.status === 201) {\n          action = 'created';\n        }\n        this.isSaving = false;\n        const toast = await this.toastCtrl.create({message: `Question ${action} successfully.`, duration: 2000, position: 'middle'});\n        await toast.present();\n        await this.navController.navigateBack('/tabs/entities/question');\n    }\n\n    previousState() {\n        window.history.back();\n    }\n\n    async onError(error) {\n        this.isSaving = false;\n        console.error(error);\n        const toast = await this.toastCtrl.create({message: 'Failed to load data', duration: 2000, position: 'middle'});\n        await toast.present();\n    }\n\n    private createFromForm(): Question {\n        return {\n            ...new Question(),\n            id: this.form.get(['id']).value,\n            intitule: this.form.get(['intitule']).value,\n            image: this.form.get(['image']).value,\n            dateCreation: this.form.get(['dateCreation']).value,\n            lastUpdate: this.form.get(['lastUpdate']).value,\n        };\n    }\n\n}\n","import { NgModule, Injectable } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { IonicModule } from '@ionic/angular';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule, Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { UserRouteAccessService } from '../../../services/auth/user-route-access.service';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Observable, of } from 'rxjs';\nimport { HttpResponse } from '@angular/common/http';\nimport { filter, map } from 'rxjs/operators';\n\nimport { QuestionPage } from './question';\nimport { QuestionUpdatePage } from './question-update';\nimport { Question, QuestionService, QuestionDetailPage } from '.';\n\n@Injectable({ providedIn: 'root' })\nexport class QuestionResolve implements Resolve<Question> {\n  constructor(private service: QuestionService) {}\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Question> {\n    const id = route.params.id ? route.params.id : null;\n    if (id) {\n      return this.service.find(id).pipe(\n        filter((response: HttpResponse<Question>) => response.ok),\n        map((question: HttpResponse<Question>) => question.body)\n      );\n    }\n    return of(new Question());\n  }\n}\n\nconst routes: Routes = [\n    {\n      path: '',\n      component: QuestionPage,\n      data: {\n        authorities: ['ROLE_USER']\n      },\n      canActivate: [UserRouteAccessService]\n    },\n    {\n      path: 'new',\n      component: QuestionUpdatePage,\n      resolve: {\n        data: QuestionResolve\n      },\n      data: {\n        authorities: ['ROLE_USER']\n      },\n      canActivate: [UserRouteAccessService]\n    },\n    {\n      path: ':id/view',\n      component: QuestionDetailPage,\n      resolve: {\n        data: QuestionResolve\n      },\n      data: {\n        authorities: ['ROLE_USER']\n      },\n      canActivate: [UserRouteAccessService]\n    },\n    {\n      path: ':id/edit',\n      component: QuestionUpdatePage,\n      resolve: {\n        data: QuestionResolve\n      },\n      data: {\n        authorities: ['ROLE_USER']\n      },\n      canActivate: [UserRouteAccessService]\n    }\n  ];\n\n@NgModule({\n    declarations: [\n        QuestionPage,\n        QuestionUpdatePage,\n        QuestionDetailPage\n    ],\n    imports: [\n        IonicModule,\n        FormsModule,\n        ReactiveFormsModule,\n        CommonModule,\n        TranslateModule,\n        RouterModule.forChild(routes)\n    ]\n})\nexport class QuestionPageModule {\n}\n"],"names":[],"sourceRoot":"webpack:///"}