{"version":3,"file":"src_app_pages_entities_entities_module_ts.js","mappings":"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","sources":["./src/app/pages/entities/entities.module.ts","./src/app/pages/entities/entities.page.ts"],"sourcesContent":["import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { UserRouteAccessService } from 'src/app/services/auth/user-route-access.service';\nimport { EntitiesPage } from './entities.page';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EntitiesPage,\n    data: {\n      authorities: ['ROLE_USER'],\n    },\n    canActivate: [UserRouteAccessService],\n  },\n   {\n    path: 'question',\n    loadChildren: () => import('./question/question.module').then(m => m.QuestionPageModule)\n  },\n   {\n    path: 'reponse',\n    loadChildren: () => import('./reponse/reponse.module').then(m => m.ReponsePageModule)\n  },\n   {\n    path: 'user-device',\n    loadChildren: () => import('./user-device/user-device.module').then(m => m.UserDevicePageModule)\n  },\n  {\n    path: 'question-list',\n    loadChildren: ()=> import('./question-list/question-list.module').then(m => m.QuestionListPageModule )\n  },\n  {\n    path: 'favourite-list',\n    loadChildren: ()=> import('./favourite-list/favourite-list.module').then(m => m.FavouriteListPageModule )\n  },\n  {\n    path: 'score-stat',\n    loadChildren: ()=> import('./score-stat/score-stat.module').then(m => m.ScoreStatPageModule )\n  },\n  {\n    path: 'generate-users',\n    loadChildren: ()=> import('./generate-users/generate-users.module').then(m => m.GenerateUsersPageModule )\n  }\n  /* jhipster-needle-add-entity-route - JHipster will add entity modules routes here */\n];\n\n@NgModule({\n  imports: [IonicModule, CommonModule, FormsModule, RouterModule.forChild(routes), TranslateModule],\n  declarations: [EntitiesPage],\n})\nexport class EntitiesPageModule {}\n","import { CheckAccountTypeService } from './../home/check-account-type.service';\nimport { User } from './../../services/user/user.model';\nimport { ApiService } from './../../services/api/api.service';\nimport { Component, OnInit } from '@angular/core';\nimport { NavController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-entities',\n  templateUrl: 'entities.page.html',\n  styleUrls: ['entities.page.scss'],\n})\nexport class EntitiesPage implements OnInit{\n  entities: Array<any> = [\n    { name: 'Question', component: 'QuestionPage', route: 'question' },\n    { name: 'Reponse', component: 'ReponsePage', route: 'reponse' },\n    { name: 'User Device', component: 'UserDevicePage', route: 'user-device' },\n    { name: 'Mes Favorits', component: 'QuestionFavouriteListPage', route: 'favourite-list' },\n    { name: 'Score && Statistiques', component: 'QuestionScoreStat', route: 'score-stat' },\n    { name: 'Generate Users', component: 'GenerateUsers', route: 'generate-users' }\n\n    /* jhipster-needle-add-entity-page - JHipster will add entity pages here */\n  ];\n  entitiesUser: Array<any> = [\n    { name: 'Mes Favorits', component: 'QuestionFavouriteListPage', route: 'favourite-list' },\n    { name: 'Score && Statistiques', component: 'QuestionScoreStat', route: 'score-stat' },\n  ];\n\n  showAllEntities : boolean;\n\n  constructor(public navController: NavController, private checkAccount: CheckAccountTypeService ) {}\n\n  ngOnInit(): void {\n    this.showAllEntities = false;\n    this.isAdmin();\n  }\n\n  openPage(page) {\n    this.navController.navigateForward('/tabs/entities/' + page.route);\n  }\n  \n   isAdmin(){\n      if(this.checkAccount.isAdministrator){\n        this.showAllEntities = true;\n      }else{\n        this.showAllEntities = false;\n      }\n   }\n}\n"],"names":[],"sourceRoot":"webpack:///"}